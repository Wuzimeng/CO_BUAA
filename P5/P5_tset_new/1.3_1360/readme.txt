！！！！重要！！！！
请仔细阅读12.02更新，此前的自动测试结果可能失效
！！！！重要！！！！
请仔细阅读12.02更新，此前的自动测试结果可能失效
！！！！重要！！！！
请仔细阅读12.02更新，此前的自动测试结果可能失效

---------------------

12.02更新

经同学反映，自动测试程序从第255点开始失效，且存在通过了1360个测试点但没有通过中强测的情况，现已针对上述问题进行了处理，详细说明如下：

1. 对11.30更新前的测试程序，从第255点开始所有结果均为accepted，对11.30更新后的测试程序，从第255点开始所有结果均为wrong answer，最新版的自动测试程序已解决上述问题

出现上述问题的原因：
本人憨批忘记了fclose，在打开的文件达到c++支持的上限后，再fopen会得到NULL，对11.30更新前的测试程序，其先行判断了ans.txt，发现ans.txt为NULL就得出测试点正确，对11.30更新后的程序，其先行判断了out.txt，发现out.txt为NULL就得出测试点错误
现已对测试工具进行了优化：
自动产生标准的tb文件，自动去除输出中的无意义信息，自动忽略对0号寄存器的写入操作，记录了出错点并支持在下次运行中只测试之前出错的测试点

2. 对通过了1360个测试点但没有通过中强测的同学，经过交流，问题在于我默认了在转发过程中对0号寄存器的处理是正确的，因此没有进行测试，这位同学出错原因在于此处处理不当

现已对测试数据进行了强化：
增加了对0号寄存器的测试，此外考虑到此前1360点“有问题前几个点就测出来了，前面过了后面一般不会错”的情况，本人分析了测试数据，剔除了其中的无意义部分，重新得到了581个测试点，经测试加强后的数据可hack掉此前通过了1360个测试点但没有通过中强测的同学的CPU

感谢gsw同学，hy同学，lyyf同学，wjy同学提供的帮助。

---------------------

关于数据文件的说明：

1.	1.1_252为本人程序构造的针对冲突的第一版数据，共252个点，弱的一批所有没发到讨论区
	1.2_708为本人程序构造的针对冲突的第二版数据，共708个点，也是本帖最开始提供的测试点
	1.3_1360为本人程序构造的针对冲突的第三版数据，共1360个点，包含了1.2版中的测试数据
	1.4_581为本人程序构造的针对冲突的第四版数据，共581个点，理论强度高于1.3版但和1.3版没有包含关系
	数据有一定随机性，但主要体现在初始化上，整体上是构造的，就dfs出这么多测试点
	从1.1到1.4，使用的指令和P5要求不完全相同，为lw,sw,addu,addi,beq,jal,jr,jalr
	其中的测试点均只需要仿真20us(tb中#5 clk<=~clk;)，RAM需要开到0x2ffc，即和Mars保持一致

2.	other_test为本人手工构造的针对正确性的测试数据，内附说明，p4p5p6都能用，看好包含的指令种类即可
	AutoTest.cpp为新版自动测试程序，Mars.jar为魔改版Mars，screenCapture.wmv为使用教程

3.	通过本测试不代表CPU完全没有问题，如果你在可以AK这些测试点的情况下找出了冲突相关的bug，欢迎回复或私信提出

4.	no python, c++ yyds!!! no python, c++ yyds!!! no python, c++ yyds!!!