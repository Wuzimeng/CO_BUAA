.data 
	array: .space 256
	used: .space 32
	location_b: .space 32
	location_c: .space 32
	
.text
	#$a0 locked as 1
	li $a0,1
	#$a1 locked as 8
	li $a1,8
	#$a2 locked as 4
	li $a2,4
	#$a3 locked as 2
	li $a3,2
	#$t0 used for i++
	#$t1 locked as array_address
	#$t2 locked as other_address	
	#$t3 used for comparing
	#$s0 locked to save m
	#$s1 locked for a
	#$s2 locked for b
	#$s3 locked for c
	#$s7 locked as end
	
	li $v0,5
	syscall
	move $s0,$v0                    #scanf("%d",&m)     $s0 save m (locked)
	li $v0,5
	syscall
	move $s1,$v0                    #scanf("%d",&n)       $s1 save n
	
	li $t0,0
	for_4_begin:
		beq $t0,$s1,for_4_end
		li $v0,5
		syscall
		move $s2,$v0
		li $v0,5
		syscall
		move $s3,$v0
		jal find_array_addr
		sw $a0,0($t1)
		jal swap_b_c
		jal find_array_addr
		sw $a0,0($t1)
		jal swap_b_c
		addi $t0,$t0,1
		j for_4_begin
	for_4_end:
		nop
		
	beq $s0,$a3,special
	beq $s0,$a0,special2
	li $s1,1                                        #int a=1        
	li $s2,1                                       #int b=1
	li $s3,1                                       #int c=1
	jal find_used_addr
	sw $a0,0($t2)
	
	for_5_begin:
		if_1:
			jal find_array_addr
			lw $t7,0($t1)
			bne $t7,$a0,if_1_else
			jal find_used_addr
			lw $t7,0($t2)
			bne $t7,$0,if_1_else
			addi $t7,$s0,1
			slt $t3,$s3,$t7
			bne $t3,$a0,if_1_else
		if_1_then:
			jal find_array_addr
			sw $0,0($t1)
			jal swap_b_c
			jal find_array_addr
			sw $0,0($t1)
			jal swap_b_c
			jal find_used_addr
			sw $a0,0($t2)
			jal find_location_b_addr
			sw $s2,0($t2)
			jal find_location_c_addr
			sw $s3,0($t2)
			move $s2,$s3
			li $s3,1
			addi $s1,$s1,1
			j if_1_end
		if_1_else:
			addi $s3,$s3,1
			if_2:
				addi $t7,$s0,1
				slt $t3,$s3,$t7
				beq $t3,$a0,if_2_end
			if_2_then:
				subi $s1,$s1,1
				jal find_location_b_addr
				lw $s2,0($t2)
				jal find_location_c_addr
				lw $s3,0($t2)
				jal find_array_addr
				sw $a0,0($t1)
				jal swap_b_c
				jal find_array_addr
				sw $a0,0($t1)
				jal swap_b_c
				jal find_used_addr
				sw $0,0($t2)
				addi $s3,$s3,1
				j if_2_end				
			if_2_end:
				j if_1_end
		if_1_end:
			nop
		
		if_3:
			bne $s1,$0,if_3_else_1
		if_3_then:
			li $s7,0
			j end
		if_3_else_1:
			bne $s1,$s0,if_3_else_2
			jal find_array_addr1
			lw $t7,0($t1)
			bne $t7,$a0,if_3_else_2
		if_3_else_1_then:
			li $s7,1
			j end
		if_3_else_2:
			bne $s0,$s1,if_3_end
			jal find_array_addr1
			lw $t7,0($t1)
			bne $t7,$0,if_3_end
		if_3_else_2_then:
			subi $s1,$s1,1
			jal find_location_b_addr
			lw $s2,0($t2)
			jal find_location_c_addr
			lw $s3,0($t2)
			jal find_array_addr
			sw $a0,0($t1)
			jal swap_b_c
			jal find_array_addr
			sw $a0,0($t1)
			jal swap_b_c
			jal find_used_addr
			sw $0,0($t2)
			addi $s3,$s3,1
			j if_3_end
		if_3_end:
			nop
		j for_5_begin
		
	end:
		li $v0,1
		move $a0,$s7
		syscall
		li $v0,10
		syscall
			
	find_array_addr:                     
		mult $a1,$s2
		mflo $t1
		add $t1,$t1,$s3
		mult $t1,$a2
		mflo $t1
		jr $ra
		
	find_array_addr1:
		mult $a1,$s2
		mflo $t1
		add $t1,$t1,$a0
		mult $t1,$a2
		mflo $t1
		jr $ra

	swap_b_c:
		move $t7,$s2
		move $s2,$s3
		move $s3,$t7
		jr $ra
		
	find_used_addr:
		la $t2,used
		mult $s3,$a2
		mflo $t7
		add $t2,$t2,$t7
		jr $ra
		
	find_location_b_addr:
		la $t2,location_b
		mult $s1,$a2
		mflo $t7
		add $t2,$t2,$t7
		jr $ra
		
	find_location_c_addr:
		la $t2,location_c
		mult $s1,$a2
		mflo $t7
		add $t2,$t2,$t7
		jr $ra
		
	special:
		li $s2,1
		li $s3,2
		jal find_array_addr
		lw $t6,0($t1)
		beq $t6,$a0,special1
		li $s7,0
		j end
	special1:
		li $s7,1
		j end
		
	special2:
		li $s7,1
		j end
		
		
		
		
	
	
	
		
	
		
	
			
